buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath paths.fabricClassPath
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

final Properties signingProperties = new Properties()
signingProperties.load(new FileInputStream(file('local/signing.properties')))

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion "$rootProject.compileSdkVersion".toInteger()
    buildToolsVersion "$rootProject.buildToolsVersion"

    defaultConfig {
        applicationId 'io.github.ryanhoo.firFlight'
        minSdkVersion "$rootProject.minSdkVersion".toInteger()
        targetSdkVersion "$rootProject.targetSdkVersion".toInteger()
        versionCode "$VERSION_CODE".toInteger()
        versionName "$VERSION_NAME"
    }

    signingConfigs {
        release {
            storeFile file("local/keystore.jks")
            keyAlias signingProperties['KEY_ALIAS']
            storePassword signingProperties['KEY_STORE_PASSWORD']
            keyPassword signingProperties['KEY_PASSWORD']
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res-common-dialog/',
                    'src/main/res/'
            ]
        }
    }

    buildTypes {
        debug {
            versionNameSuffix '(D)'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        develop {
            applicationId 'io.github.ryanhoo.firFlight.dev'
        }

        fir

        // WanDouJia
        // YingYongBao
        // GooglePlay
    }

    productFlavors.all { flavor ->
        manifestPlaceholders.put('flightFlavorName', flavor.name)
        // Unnecessary, there already has a FLAVOR in BuildConfig
        // flavor.buildConfigField('String', 'FLAVOR_NAME', "\"${flavor.name}\"")
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile libs.junit

    compile libs.support_v4
    compile libs.appcompat_v7
    compile libs.material_design
    compile libs.recyclerview_v7
    compile libs.cardview_v7
    compile libs.customtabs

    compile libs.rxjava
    compile libs.rxandroid

    compile libs.glide

    compile libs.butterknife

    compile libs.gson

    compile libs.retrofit2
    compile libs.retrofit2GsonConverter
    compile libs.retrofit2RxJavaAdapter

    compile libs.sqlbrite

    compile libs.bughd

    compile(libs.crashlytics) { transitive = true; }
    compile(libs.answers) { transitive = true; }

    compile libs.stetho
    compile libs.stetho_okhttp
    compile libs.stetho_jsconsole
}

