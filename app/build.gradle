buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "io.github.ryanhoo.firFlight"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode VERSION_CODE.toInteger()
        versionName VERSION_NAME
    }

    signingConfigs {
        release {
            storeFile file("keystore.jks")
            keyAlias "release-keystore"
            storePassword ''
            keyPassword ''
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    buildTypes {
        debug {
            versionNameSuffix '(D)'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        develop

        fir

        // WanDouJia
        // YingYongBao
        // GooglePlay
    }

    productFlavors.all { flavor ->
        manifestPlaceholders.put('flightFlavorName', flavor.name)
        // Unnecessary, there already has a FLAVOR in BuildConfig
        // flavor.buildConfigField('String', 'FLAVOR_NAME', "\"${flavor.name}\"")
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    compile('com.android.support:support-v4:+')

    compile('com.android.support:appcompat-v7:23.2.1') {
        exclude module: 'support-v4'
    }
    compile('com.android.support:design:23.2.1') {
        exclude module: 'support-v4'
    }
    compile('com.android.support:recyclerview-v7:23.2.1') {
        exclude module: 'support-v4'
    }
    compile('com.android.support:cardview-v7:23.2.1') {
        exclude module: 'support-v4'
    }
    // Image Loader https://github.com/bumptech/glide
    compile('com.github.bumptech.glide:glide:3.7.0') {
        exclude module: 'support-v4'
    }
    compile('com.android.support:customtabs:23.2.1') {
        exclude module: 'support-v4'
    }

    compile 'com.jakewharton:butterknife:7.0.1'

    compile 'com.google.code.gson:gson:2.6.2'

    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'

    // BugHD http://bughd.com/doc/android
    compile 'im.fir:fir-sdk:latest.integration@aar'

    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
    compile('com.crashlytics.sdk.android:answers:1.3.6@aar') {
        transitive = true;
    }
}

// Keystore password input

// https://www.timroes.de/2014/01/19/using-password-prompts-with-gradle-build-files/
gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(':app:assembleRelease')) {
        if (System.console()) {
            def keystorePassword = System.console().readPassword('\nPlease enter key password: ')
            keystorePassword = new String(keystorePassword)
            android.signingConfigs.release.storePassword = keystorePassword
            android.signingConfigs.release.keyPassword = keystorePassword
        } else {
            throw new RuntimeException('System.console() is null \n' +
                    'Please run with --no-daemon and be prepared to input key store password!')
        }
    }
}